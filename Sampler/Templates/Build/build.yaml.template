---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
# SourcePath: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
# OutputDirectory: ../output/Sampler
CopyPaths:
  - en-US
<%
    If ($PLASTER_PARAM_ModuleType -eq 'dsccommunity' -or $PLASTER_PARAM_ModuleType -match 'complete' -or $PLASTER_PARAM_Features -Contains ("All") -or $PLASTER_PARAM_Features -Contains ("DSCResources")) {
"  - DSCResources"
    }
    else {
"#  - DSCResources"
    }
%>
  # - Modules
Encoding: UTF8 # With BOM in WinPS, noBOM in PSCore.

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
# suffix: suffix.ps1
# prefix: prefix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
<%
    If ($PLASTER_PARAM_ModuleType -eq 'dsccommunity' -or $PLASTER_PARAM_ModuleType -match 'complete' -or $PLASTER_PARAM_Features -Contains ("All") -or $PLASTER_PARAM_Features -Contains ("DSCResources"))
    {
@"
  DscResource.Common:
    CopyOnly: true
    Path: ./output/RequiredModules/DscResource.Common # relative to $buildroot, default to '$sourcePath/Modules/$NestedModuleName'
    # Destination: './output/$ProjectName/$ModuleVersionFolder/Modules/$NestedModuleName' # or override with path relative to $buildroot
    AddToManifest: false
    # include: '*.*'
    Exclude: PSGetModuleInfo.xml
    #Filter:
  Folder.Common:
    CopyOnly: true
    AddToManifest: false
"@
  }
  else
  {
@"
#  HelperSubmodule: # This is the first submodule to build into the output
#    Path: ./*/Modules/HelperSubmodule/HelperSubmodule.psd1
#    # $ModuleVersionFolder is trimmed (remove metadata & Prerelease tag) and OutputDirectory expanded (the only one)
#    OutputDirectory: $BuildModuleOutput/$ProjectName/$ModuleVersionFolder/Modules/HelperSubmodule
#    VersionedOutputDirectory: false
#    AddToManifest: false
#    SemVer: $ModuleVersionFolder
#    # suffix:
#    # prefix:
"@
}

%>

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:
  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output
<%
    if($PLASTER_PARAM_ModuleType -in @('dsccommunity')) {
@"
    - Generate_Conceptual_Help
    - Generate_Wiki_Content
"@
    }
%>

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold
    # Use this task when you have multiple parallel tests, which produce multiple
    # code coverage files and needs to get merged into one file.
    #- Merge_CodeCoverage_Files
<%
    if($PLASTER_PARAM_ModuleType -in @('dsccommunity')) {
"    - hqrmtest"
    }
%>

  publish:
    - Publish_release_to_GitHub
    - publish_module_to_gallery # runs if nuget is not available


####################################################
#       PESTER  Configuration                      #
####################################################

Pester: #Passthru, OutputFile, CodeCoverageOutputFile not supported
  OutputFormat: NUnitXML
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
<%
    if ($PLASTER_PARAM_ModuleType -eq 'dsccommunity' -or $PLASTER_PARAM_ModuleType -match 'complete' -or $PLASTER_PARAM_Features -Contains ("All") -or $PLASTER_PARAM_Features -Contains ("DSCResources"))
    {
"    - Modules/DscResource.Common"
    }
%>
    # - Template
  # Default is to use the tests folder in the project folder or source folder (if present)
  # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
  Script:
  # - tests/QA/module.tests.ps1
  # - tests/QA
  # - tests/Unit
  # - tests/Integration
  ExcludeTag:
    - helpQuality
    - FunctionalQuality
    - TestQuality
  Tag:
  CodeCoverageThreshold: 85 # Set to 0 to bypass
  # CodeCoverageOutputFile: JaCoCo_$OsShortName.xml
  # CodeCoverageOutputFileEncoding: ascii
  # CodeCoverageMergedOutputFile: JaCoCo_Merged.xml
<%
    if ($PLASTER_PARAM_ModuleType -eq 'dsccommunity' -or $PLASTER_PARAM_ModuleType -match 'complete' -or $PLASTER_PARAM_Features -Contains ("All") -or $PLASTER_PARAM_Features -Contains ("DSCResources"))
    {
@"

DscTest:
  ExcludeTag:
    - "Common Tests - New Error-Level Script Analyzer Rules"
  Tag:
  ExcludeSourceFile:
    - output
  ExcludeModuleFile:
  #  - Templates
"@
    }
    if ($PLASTER_PARAM_ModuleType -eq 'dsccommunity' -or $PLASTER_PARAM_ModuleType -match 'complete' -or $PLASTER_PARAM_Features -Contains ("All") -or $PLASTER_PARAM_Features -Contains ("DSCResources"))
    {
"    - Modules/DscResource.Common"
    }
    else
    {
"  #  - Modules/DscResource.Common"
    }
%>

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks' # this means: import (dot source) all aliases ending with .ib.tasks exported by sampler module
<%
    if($PLASTER_PARAM_ModuleType -in @('dsccommunity')) {
@"
  DscResource.DocGenerator:
    - 'Task.*'
"@
    }
%>


# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""
<%
    if($PLASTER_PARAM_ModuleType -in @('dsccommunity')) {
@"

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: dscbot
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false
"@
    }
%>
