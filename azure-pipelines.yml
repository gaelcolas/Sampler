trigger:
- master

#variables:

stages:
  - stage: Build_artefact
    jobs:
      - job: BuildModuleJob
        pool:
          vmImage: 'ubuntu 16.04'
        steps:
          - task: GitVersion@5
            name: gitversion
            inputs:
              runtime: 'core'
              configFilePath: 'GitVersion.yml'

          - task: PowerShell@2
            name: Build
            inputs:
              filePath: './build.ps1'
              arguments: '-ResolveDependency -tasks build'
              pwsh: true
            env:
              ModuleVersion: $(GitVersion.Informationalversion)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'output/'
              ArtifactName: 'output'
              publishLocation: 'Container'

  - stage: test_linux
    dependsOn: Build_artefact
    jobs:
      - job: TestdModuleJob
        pool:
          vmImage: 'ubuntu 16.04'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'output'
              downloadPath: '$(Build.SourcesDirectory)'

          - task: PowerShell@2
            name: Test
            inputs:
              filePath: './build.ps1'
              arguments: '-tasks test'
              pwsh: true
            env:
              ModuleVersion: $(GitVersion.Informationalversion)

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'NUnit'
              testResultsFiles: 'output/testResults/NUnit*.xml'


          # Publish code coverage results
          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'JaCoCo'
              summaryFileLocation: 'output/testResults/CodeCov*.xml'


  # - stage: test_windows_core
  #   dependsOn: Build_artefact
  # - stage: test_windows_ps
  #   dependsOn: Build_artefact
  # - stage: test_macos
  #   dependsOn: Build_artefact
  # - stage: release_on_sucess
  #   dependsOn:
  #   - test_linux
  #   - test_windows_core
  #   - test_windows_ps
  #   - test_macos
