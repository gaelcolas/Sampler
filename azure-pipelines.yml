trigger:
- master

pool:
  vmImage: 'ubuntu 16.04'
#variables:

steps:
- task: GitVersion@5
  name: gitversion
  inputs:
    runtime: 'core'
    configFilePath: 'GitVersion.yml'

# - powershell: |
#     $moduleName = (Get-ChildItem "$(Build.SourcesDirectory)/*/*.psd1" | Where-Object {
#               ($_.Directory.Name -match 'source|src' -or $_.Directory.Name -eq $_.BaseName) -and
#               $(try { Test-ModuleManifest $_.FullName -ErrorAction Stop }catch{$false}) }
#           ).BaseName
#     Write-Host "##vso[task.setvariable variable=ModuleName;isOutput=true]$moduleName"
#   name: GetModuleName

- task: PowerShell@2
  name: Build
  inputs:
    filePath: './build.ps1'
    arguments: '-ResolveDependency -tasks build'
    pwsh: true
  env:
    ModuleVersion: $(GitVersion.Informationalversion)

- task: PowerShell@2
  name: Test
  inputs:
    filePath: './build.ps1'
    arguments: '-tasks test'
    pwsh: true
  env:
    ModuleVersion: $(GitVersion.Informationalversion)

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: 'output/testResults/NUnit*.xml'


# Publish code coverage results
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: 'output/testResults/CodeCov*.xml'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'output/'
    ArtifactName: 'BuiltModule'
    publishLocation: 'Container'
