---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
# SourcePath: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
# OutputDirectory: ../output/Sampler
CopyDirectories:
  #- HelperSubmodule # This will be built as submodule instead
  - DSCResources
  - ../.build/tasks
  - en-US
  - Assets
  - Templates
Encoding: UTF8

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
suffix: suffix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:
  HelperSubmodule: # This is the first submodule to build into the output
    Path: ./*/Modules/HelperSubmodule/HelperSubmodule.psd1
    # $ModuleVersionFolder is trimmed (remove metadata & Prerelease tag) and OutputDirectory expanded (the only one)
    OutputDirectory: $BuildModuleOutput/$ProjectName/$ModuleVersionFolder/Modules/HelperSubmodule
    VersionedOutputDirectory: false
    AddToManifest: false
    SemVer: $ModuleVersionFolder
    # suffix:
    # prefix:
  DscResource.Common:
    CopyOnly: true
    Path: ./output/RequiredModules/DscResource.Common # relative to $buildroot, default to '$sourcePath/Modules/$NestedModuleName'
    # Destination: './output/$ProjectName/$ModuleVersionFolder/Modules/$NestedModuleName' # or override with path relative to $buildroot
    AddToManifest: false
    # include: '*.*'
    Exclude: PSGetModuleInfo.xml
    #Filter:
  Folder.Common:
    CopyOnly: true
    AddToManifest: false

####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  # OutputFolder:
  OutputFormat: NUnitXML
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
    - tasks
    - Templates
    - Modules/DscResource.Common
  # Default is to use the tests folder in the project folder or source folder (if present)
  # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
  Script:
  # - tests/QA/module.tests.ps1
  # - tests/QA
  # - tests/Unit
  # - tests/Integration
  ExcludeTag:
  Tag:
  CodeCoverageThreshold: 40 # Set to 0 to bypass

DscTest:
  ExcludeTag:
    - "Common Tests - New Error-Level Script Analyzer Rules"
    - "Common Tests - Validate Localization"
    - "Common Tests - Validate Example Files To Be Published"
    - "Common Tests - Validate Example Files"
  Tag:
  ExcludeSourceFile:
    - output
    - Modules/DscResource.Common
  ExcludeModuleFile:
    - Templates
    - Modules/DscResource.Common

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:
  CopyPlaster: |
    {
      # Create a Build task from the Yaml (Because we dont want this task to be in the .build folder)
      # so that it's not copied and made accessible in the Sampler Module.
      $PlasterTemplateFolder = Get-Item $BuildModuleOutput/$ProjectName/*/Templates/Sampler
      # ./output/Sampler/*/Templates/Sampler
      $ToCopy = Get-ChildItem -Force . -Exclude .git,output
      foreach ($item in $toCopy) {
        Copy-Item -recurse -Force -Path $item -Destination (Join-Path $PlasterTemplateFolder $item.Name)
      }
    }

  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - CopyPlaster
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold
    - hqrmtest

  publish:
    - publish_nupkg_to_gallery  # runs if nuget is available (prefered)
    - publish_module_to_gallery # runs if nuget is not available
    - Publish_release_to_GitHub

Resolve-Dependency: #Parameters for Resolve-Dependency
  #PSDependTarget: ./output/modules
  #Proxy: ''
  #ProxyCredential:
  Gallery: 'PSGallery'
  # AllowOldPowerShellGetModule: true
  #MinimumPSDependVersion = '0.3.0'
  AllowPrerelease: false
  Verbose: false

ModuleBuildTasks:
#   # - ModuleName: 'alias to search'
#  - Sampler: '*.ib.tasks' # this means: import (dot source) all aliases ending with .ib.tasks exported by sampler module

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: gaelcolas
  GitHubConfigUserEmail: gaelcolas@synedgy.com
  UpdateChangelogOnPrerelease: false
