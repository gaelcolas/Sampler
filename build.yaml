---
####################################################
#          ModuleBuilder Configuration             #
####################################################
# Path to the Module Manifest to build (where path will be resolved from)
# SourcePath: ./Sampler/Sampler.psd1
# Output Directory where ModuleBuilder will build the Module, relative to module manifest
# OutputDirectory: ../output/Sampler
CopyPaths:
  #- HelperSubmodule # This will be built as submodule instead
  # - DSCResources
  - ../.build/tasks
  - en-US
  - Templates
Encoding: UTF8

# Suffix to add to Root module PSM1 after merge (here, the Set-Alias exporting IB tasks)
suffix: suffix.ps1
VersionedOutputDirectory: true

####################################################
#      ModuleBuilder Submodules Configuration      #
####################################################

NestedModule:

  # DscResource.Common:
  #   CopyOnly: true
  #   Path: ./output/RequiredModules/DscResource.Common # relative to $buildroot, default to '$sourcePath/Modules/$NestedModuleName'
  #   # Destination: './output/$ProjectName/$ModuleVersionFolder/Modules/$NestedModuleName' # or override with path relative to $buildroot
  #   AddToManifest: false
  #   # include: '*.*'
  #   Exclude: PSGetModuleInfo.xml
    #Filter:

####################################################
#       PESTER  Configuration                      #
####################################################

Pester:
  # OutputFolder:
  OutputFormat: NUnitXML
  # Will look at every *.ps1 & *.psm1 under ModulePath, excepts when $_.FullName -match (Join-Path $ProjectPath $ExcludeFromCodeCoverageItem)
  ExcludeFromCodeCoverage:
    - tasks
    - Templates
    - Modules/DscResource.Common
    - Assets
  # Default is to use the tests folder in the project folder or source folder (if present)
  # can use it to prioritize: tests/QA, tests/Unit, tests/Integration
  Script:
    # - tests/Unit/Public/Add-Sample.tests.ps1
    # - tests/Unit/Public/New-SampleModule.tests.ps1
    # - tests/QA
    # - tests/Unit
    # - tests/Integration
  ExcludeTag:
  Tag:
  CodeCoverageThreshold: 12.5 # Set to 0 to bypass

DscTest:
  ExcludeTag:
    - "Common Tests - New Error-Level Script Analyzer Rules"
    - "Common Tests - Validate Localization"
    - "Common Tests - Validate Example Files To Be Published"
    - "Common Tests - Validate Example Files"
  Tag:
  ExcludeSourceFile:
    - output
    - Modules/DscResource.Common
  ExcludeModuleFile:
    - Templates
    - Modules/DscResource.Common

####################################################
#       Sampler Pipeline Configuration             #
####################################################
# Defining 'Workflows' (suite of InvokeBuild tasks) to be run using their alias
BuildWorkflow:

  '.': # "." is the default Invoke-Build workflow. It is called when no -Tasks is specified to the build.ps1
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  # defining test task to be run when invoking `./build.ps1 -Tasks test`
  test:
    - Pester_Tests_Stop_On_Fail
    - Pester_if_Code_Coverage_Under_Threshold
    - hqrmtest

  publish:
    #- publish_nupkg_to_gallery  # Deploy using Nuget
    - publish_module_to_gallery # Deploy using cmdlet Publish-Module
    - Publish_release_to_GitHub
    - Create_ChangeLog_GitHub_PR

# Import ModuleBuilder tasks from a specific PowerShell module using the build
# task's alias. Wildcard * can be used to specify all tasks that has a similar
# prefix and or suffix. The module contain the task must be added as a required
# module in the file RequiredModules.psd1.
ModuleBuildTasks:
  Sampler.GitHubTasks:
    - '*.ib.tasks'

# Invoke-Build Header to be used to 'decorate' the terminal output of the tasks.
TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: gaelcolas
  GitHubConfigUserEmail: gaelcolas@synedgy.com
  UpdateChangelogOnPrerelease: false
